generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String       @db.VarChar(50)
  displayName String       @unique @db.VarChar(16)
  email       String       @unique @db.VarChar(254)
  password    String       @db.VarChar(60)
  definitions Definition[]
  examples    Example[]
  collections Collection[]
  bookmarks   Bookmark[]
}

model Definition {
  id          Int                      @id @default(autoincrement())
  createdAt   DateTime                 @default(now())
  updatedAt   DateTime                 @updatedAt
  name        String                   @db.VarChar(50)
  summary     String                   @db.VarChar(560)
  description String                   @db.VarChar(300)
  definition  String                   @db.VarChar(80)
  user        User                     @relation(fields: [userId], references: [id])
  userId      Int
  examples    Example[]
  collections DefinitionOnCollection[]
  bookmarks   Bookmark[]
}

model Example {
  id           BigInt     @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  definition   Definition @relation(fields: [definitionId], references: [id])
  definitionId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  text         String     @db.VarChar(240)
  source       String?    @db.VarChar(60)
}

model Collection {
  id          BigInt                   @id @default(autoincrement())
  createdAt   DateTime                 @default(now())
  updatedAt   DateTime                 @updatedAt
  name        String                   @db.VarChar(80)
  details     String?                  @db.VarChar(460)
  description String?                  @db.VarChar(120)
  user        User                     @relation(fields: [userId], references: [id])
  userId      Int
  definitions DefinitionOnCollection[]
}

model DefinitionOnCollection {
  definition   Definition @relation(fields: [definitionId], references: [id])
  definitionId Int
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId BigInt
  createdAt    DateTime   @default(now())

  @@id([definitionId, collectionId])
}

model Bookmark {
  createdAt     DateTime   @default(now())
  definition    Definition @relation(fields: [definition_id], references: [id])
  definition_id Int
  user          User       @relation(fields: [user_id], references: [id])
  user_id       Int

  @@id([definition_id, user_id])
}
